<?php

class Kneipe {
    private $id;
    private $name;
    private $art;
    private $bewertung;

    public function __construct($id = null) {
        if ($id !== null) {
            $this->id = $id;
            $this->load();
        }
    }

    public function getId() {
        return $this->id;
    }

    public function getName() {
        return $this->name;
    }

    public function getArt() {
        return $this->art;
    }

    public function load() {
        $db = Database2::getInstance();
        $q = $db->q('SELECT * FROM %pkneipen WHERE knid = %i', $this->id);

        if ($q->hasData()) {
            $this->id = $q->getFirst()->knid;
            $this->name = $q->getFirst()->name;
            $this->art = new Kneipenart($q->getFirst()->kaid);
            $this->bewertung = new Bewertung($q->getFirst()->kaid);
        }

        return $q->hasData();
    }

    public static function getKneipen() {
        $db = Database2::getInstance();
        $data = array();

        $q = $db->q('SELECT knid FROM %pkneipen ORDER BY name');
        if ($q->hasData()) {
            foreach ($q->getData() as $v) {
                $data[] = new Kneipe($v->knid);
            }
        }

        return $data;
    }

    public function remove() {
        // Not implemented
    }

    /**
     * Class casting
     *
     * @param string|object $destination
     * @param object $sourceObject
     * @return object
     */
    public static function cast($sourceObject) {
        $destination = new Kneipe();
        $sourceReflection = new ReflectionObject($sourceObject);
        $destinationReflection = new ReflectionObject($destination);
        $sourceProperties = $sourceReflection->getProperties();
        foreach ($sourceProperties as $sourceProperty) {
            $sourceProperty->setAccessible(true);
            $name = $sourceProperty->getName();
            $value = $sourceProperty->getValue($sourceObject);
            if ($destinationReflection->hasProperty($name)) {
                $propDest = $destinationReflection->getProperty($name);
                $propDest->setAccessible(true);
                $propDest->setValue($destination,$value);
            } else {
                $destination->$name = $value;
            }
        }

        return $destination;
    }

}

?>
