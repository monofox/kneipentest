<?php
/**
 * Objective result row 
 *
 * PHP Version 5.3
 *
 * @package   FLS::Database 
 * @author    Website-Team <website-team@fls-wiesbaden.de>
 * @copyright 2011-2012 Website-Team <website-team@fls-wiesbaden.de>
 * @license   GPLv3+ http://www.gnu.org/licenses/gpl.html
 * @link      https://trac.fls-wiesbaden.de/browse/flshp/trunk/inc/ResultRow.class.php
 */
// maybe includes in future.

/**
 * Objective result row 
 *
 * PHP Version 5.3
 *
 * @package   FLS::Database 
 * @author    Website-Team <website-team@fls-wiesbaden.de>
 * @copyright 2011-2012 Website-Team <website-team@fls-wiesbaden.de>
 * @license   GPLv3+ http://www.gnu.org/licenses/gpl.html
 * @link      https://trac.fls-wiesbaden.de/browse/flshp/trunk/inc/ResultRow.class.php
 */
class ResultRow {
    private $attributes;

    /**
     * Initializes the attributes
     */
    public function __construct() {
        $this->attributes = array();
    }

    /**
     * set attributes - generates it dynamical.
     *
     * @param string $name  Name of the attribute
     * @param mixed  $value Value of the attribute
     *
     * @return void
     */
    public function setAttribute($name, $value) {
        $this->attributes[$name] = $value;
    }

    /**
     * Removes an attribute.
     *
     * @param string $name Name of the attribute
     *
     * @return void
     */
    public function removeAttribute($name) {
        unset($this->attributes[$name]);
    }

    /**
     * Check whether an variable exists or not.
     *
     * @param string $name the variable name
     *
     * @return bool
     */
    public function __isset($name) {
        if (array_key_exists($name, $this->attributes)) {
            return true;
        } else {
            return false;
        }
    }

    /**
     * Sets an attribute
     *
     * @param string $name  the name of the attribute
     * @param mixed  $value the value of the attribute
     *
     * @return void
     */
    public function __set($name, $value) {
        $this->setAttribute($name, $value);
    }

    /**
     * Get an attribute out of this result row
     *
     * @param string $name the name of the attribute
     *
     * @return mixed It will return null if attribute does not exist!
     */
    public function __get($name) {    
        if (isset($this->attributes[$name])) {        
            if (substr($this->attributes[$name], 0, 3) == 'enc') {
                return \FLS\Encryption\Aes::decrypt($this->attributes[$name]);
            } else {
                return $this->attributes[$name];
            }
        } else {        
            return null;    
        }
    }
}

?>
